{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","data","title","sanityPages","seo","seo_title","description","meta_description","id","sanityCompanyInfo","slogan","className","allSanityProjects","edges","map","edge","i","to","node","slug","current","key","alt","fluid","mainImage","asset","onLoad","detectScroll","loading","firstcln","observer","window","innerWidth","document","querySelector","addEventListener","scrolled","nextSlide","IntersectionObserver","entries","forEach","entry","isIntersecting","intersectionRatio","target","classList","add","threshold","querySelectorAll","animation","observe","event","deltaY","deltaX","removeEventListener","image","slideWrapper","firstScroll","firstChild","style","transition","link","opacity","pointerEvents","children","marginLeft","cloneNode","appendChild","setTimeout","parentNode","removeChild"],"mappings":"61ZAuGeA,UA3FG,WAChB,IAAMC,EAAI,OAwCV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOD,EAAKE,YAAYC,IAAIC,UAC5BC,YAAaL,EAAKE,YAAYC,IAAIG,mBAEpC,6BAASC,GAAG,SACV,kBAAC,IAAD,MAEA,4BAAKP,EAAKQ,kBAAkBC,QAE5B,yBAAKC,UAAU,qCACZV,EAAKW,kBAAkBC,MAAMC,KAAI,SAAUC,EAAMC,GAChD,OACE,kBAAC,OAAD,CAAML,UAAU,gBAAgBM,GAAIF,EAAKG,KAAKC,KAAKC,SACjD,yBACET,UAAU,+CACVU,IAAKL,GAEL,wBAAIL,UAAU,gBAAgBU,IAAKL,GAChCD,EAAKG,KAAKhB,OAEb,kBAAC,IAAD,CACEoB,IAAG,YAAcP,EAAKG,KAAKhB,MAC3BS,UAAU,gBACVU,IAAKL,EACLO,MAAOR,EAAKG,KAAKM,UAAUC,MAAMF,MACjCG,OAAQC,EACRC,QAAQ,UAEV,yBAAKjB,UAAU,kCAGjB,yBAAKA,UAAU,mBACb,0BAAMA,UAAU,cAAhB,IAA+BI,EAAKG,KAAKhB,OACzC,0BAAMS,UAAU,cAAhB,IAA+BI,EAAKG,KAAKhB,OACzC,0BAAMS,UAAU,cAAhB,IAA+BI,EAAKG,KAAKhB,OACzC,0BAAMS,UAAU,cAAhB,IAA+BI,EAAKG,KAAKhB,aAOnD,yBAAKS,UAAU,oBAOvB,IAEIkB,EAAW,GAIf,SAASF,IA0DT,IAmBQG,GA5EFC,OAAOC,WAAa,MAA8B,OAAtBD,OAAOC,cACrCC,SAASC,cAAc,QAAQC,iBAAiB,QAASC,GACzDH,SACGC,cAAc,QACdC,iBAAiB,aAAcE,GAAW,IAwEzCP,EAAW,IAAIQ,sBAdE,SAACC,EAAST,GAC/BS,EAAQC,SAAQ,SAACC,GAEXA,EAAMC,gBAAkBD,EAAME,mBAAqB,GACrDF,EAAMG,OAAOC,UAAUC,IAAI,2BAOjB,CACdC,UAAW,KAKMd,SAASe,iBAAiB,cAClCR,SAAQ,SAACS,GAClBnB,EAASoB,QAAQD,MAvErB,SAASb,EAASe,IACZA,EAAMC,OAAS,GAAKD,EAAME,OAAS,KACrCpB,SAASC,cAAc,QAAQoB,oBAAoB,QAASlB,GAC5DH,SAASe,iBAAiB,kBAAkBR,SAAQ,SAACe,GACnDA,EAAM7B,OAAS,QAGjBW,KAIJ,SAASA,IACPJ,SACGC,cAAc,QACdoB,oBAAoB,aAAcjB,GAAW,GAEhD,IAAImB,EAAevB,SAASC,cAAc,8BACtCuB,EAAcD,EAAaE,WAE/BF,EAAaG,MAAMC,WAAa,OAEhC3B,SAASe,iBAAiB,kBAAkBR,SAAQ,SAACqB,GACnDA,EAAK3B,cAAc,iCAAiCyB,MAAMG,QAAU,IACpED,EAAK3B,cAAc,MAAMyB,MAAMG,QAAU,IACzCD,EAAK3B,cAAc,oBAAoByB,MAAMG,QAAU,IACvDD,EAAKF,MAAMI,cAAgB,UAG7BP,EAAaQ,SAAS,GAAG9B,cACvB,iCACAyB,MAAMG,QAAU,IAClBN,EAAaQ,SAAS,GAAG9B,cAAc,MAAMyB,MAAMG,QAAU,IAC7DN,EAAaQ,SAAS,GAAG9B,cAAc,oBAAoByB,MAAMG,QAC/D,MACFN,EAAaQ,SAAS,GAAGL,MAAMI,cAAgB,OAC/CP,EAAaG,MAAMM,WAAa,SAChCpC,EAAW4B,EAAYS,WAAU,GACjCV,EAAaW,YAAYtC,GAEzBuC,YAAW,WACTZ,EAAaG,MAAMC,WAAa,KAChCJ,EAAaG,MAAMM,WAAa,OAChCR,EAAYY,WAAWC,YAAYb,GACnC9B,MACC","file":"component---src-pages-index-js-39a898120dfc32a603b3.js","sourcesContent":["import React from \"react\"\n// import { Link } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport Logo from \"../images/assets/logo.svg\"\nimport { func } from \"prop-types\"\n// import RewriteMarkdown from \"../components/RewriteMarkdown\"\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allSanityProjects(sort: { fields: publishedAt, order: DESC }) {\n        edges {\n          node {\n            seo {\n              meta_description\n            }\n            _id\n            title\n            slug {\n              current\n            }\n            mainImage {\n              asset {\n                fluid(maxWidth: 550) {\n                  ...GatsbySanityImageFluid\n                }\n              }\n            }\n          }\n        }\n      }\n      sanityPages(_id: { eq: \"db68df85-d952-4844-a8ea-b0b72ae8f3c7\" }) {\n        seo {\n          _type\n          focus_keyword\n          seo_title\n          meta_description\n          _key\n        }\n        title\n        _id\n      }\n      sanityCompanyInfo {\n        slogan\n      }\n    }\n  `)\n\n  return (\n    <Layout>\n      <SEO\n        title={data.sanityPages.seo.seo_title}\n        description={data.sanityPages.seo.meta_description}\n      />\n      <section id=\"index\">\n        <Logo />\n\n        <h1>{data.sanityCompanyInfo.slogan}</h1>\n\n        <div className=\"horizontal-scroll-wrapper squares\">\n          {data.allSanityProjects.edges.map(function (edge, i) {\n            return (\n              <Link className=\"link_wrappers\" to={edge.node.slug.current}>\n                <div\n                  className=\"scrolls animation  animation--fade-in-mobile\"\n                  key={i}\n                >\n                  <h2 className=\"project_title\" key={i}>\n                    {edge.node.title}\n                  </h2>\n                  <Img\n                    alt={`Project: ${edge.node.title}`}\n                    className=\"project_image\"\n                    key={i}\n                    fluid={edge.node.mainImage.asset.fluid}\n                    onLoad={detectScroll}\n                    loading=\"eager\"\n                  />\n                  <div className=\"gatsby-image-wrapper-overlay\"></div>\n                </div>\n\n                <div className=\"additional_text\">\n                  <span className=\"span_title\"> {edge.node.title}</span>\n                  <span className=\"span_title\"> {edge.node.title}</span>\n                  <span className=\"span_title\"> {edge.node.title}</span>\n                  <span className=\"span_title\"> {edge.node.title}</span>\n                </div>\n              </Link>\n            )\n          })}\n        </div>\n\n        <div className=\"scroll_block\"></div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default IndexPage\nlet allClients = []\nlet firstClient = \"\"\nlet firstcln = \"\"\nlet lastClient = \"\"\nlet lastcln = \"\"\n\nfunction detectScroll() {\n  if (window.innerWidth > 1024 || window.innerWidth === 1024) {\n    document.querySelector(\"body\").addEventListener(\"wheel\", scrolled)\n    document\n      .querySelector(\"body\")\n      .addEventListener(\"touchstart\", nextSlide, false)\n  }\n\n  initiateAnimations()\n}\n\nfunction scrolled(event) {\n  if (event.deltaY > 0 || event.deltaX > 0) {\n    document.querySelector(\"body\").removeEventListener(\"wheel\", scrolled)\n    document.querySelectorAll(\".project_image\").forEach((image) => {\n      image.onLoad = null\n    })\n\n    nextSlide()\n  }\n}\n\nfunction nextSlide() {\n  document\n    .querySelector(\"body\")\n    .removeEventListener(\"touchstart\", nextSlide, false)\n\n  let slideWrapper = document.querySelector(\".horizontal-scroll-wrapper\")\n  let firstScroll = slideWrapper.firstChild\n\n  slideWrapper.style.transition = \"0.8s\"\n\n  document.querySelectorAll(\".link_wrappers\").forEach((link) => {\n    link.querySelector(\".gatsby-image-wrapper-overlay\").style.opacity = \"1\"\n    link.querySelector(\"h2\").style.opacity = \"0\"\n    link.querySelector(\".additional_text\").style.opacity = \"0\"\n    link.style.pointerEvents = \"none\"\n  })\n\n  slideWrapper.children[1].querySelector(\n    \".gatsby-image-wrapper-overlay\"\n  ).style.opacity = \"0\"\n  slideWrapper.children[1].querySelector(\"h2\").style.opacity = \"1\"\n  slideWrapper.children[1].querySelector(\".additional_text\").style.opacity =\n    \"0.8\"\n  slideWrapper.children[1].style.pointerEvents = \"auto\"\n  slideWrapper.style.marginLeft = \"-610px\"\n  firstcln = firstScroll.cloneNode(true)\n  slideWrapper.appendChild(firstcln)\n\n  setTimeout(() => {\n    slideWrapper.style.transition = \"0s\"\n    slideWrapper.style.marginLeft = \"40px\"\n    firstScroll.parentNode.removeChild(firstScroll)\n    detectScroll()\n  }, 1500)\n}\n\nfunction initiateAnimations() {\n  // allChildrenElements.classList.add(\"animation\")\n  // allChildrenElements.classList.add(\"animation--fade-up\")\n\n  // callback function to do animations\n  const scrollImations = (entries, observer) => {\n    entries.forEach((entry) => {\n      // only do animation if the element is fully on screen\n      if (entry.isIntersecting && entry.intersectionRatio >= 0) {\n        entry.target.classList.add(\"animation--visible\")\n      } else {\n      }\n    })\n  }\n\n  // create the observer\n  const options = {\n    threshold: 0.2,\n  }\n  const observer = new IntersectionObserver(scrollImations, options)\n\n  // target the elements to be observed\n  const animations = document.querySelectorAll(\".animation\")\n  animations.forEach((animation) => {\n    observer.observe(animation)\n  })\n}\n"],"sourceRoot":""}