{"version":3,"sources":["webpack:///./src/templates/project.js"],"names":["query","imageIsLoaded","allChildrenElements","document","querySelector","children","index","length","element","classList","add","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","intersectionRatio","target","threshold","querySelectorAll","animation","observe","initiateAnimations","window","addEventListener","scrollFunctionImage","body","scrollTop","documentElement","remove","Project","props","title","data","sanityProjects","seo","seo_title","description","meta_description","image","mainImage","asset","fluid","src","id","alt","onLoad","className","categories","map","category","href","websiteUrl","blocks","_rawBody","serializers","projectId","dataset","allSanityProjects","edges","edge","to","node","slug","current"],"mappings":"4FAAA,4KAcaA,EAAK,aAkKlB,SAASC,KArCT,WAIE,IAHA,IACMC,EADkBC,SAASC,cAAc,oBACHC,SAEnCC,EAAQ,EAAGA,EAAQJ,EAAoBK,OAAQD,IAAS,CAC/D,IAAME,EAAUN,EAAoBI,GACpCE,EAAQC,UAAUC,IAAI,aACtBF,EAAQC,UAAUC,IAAI,sBAOxB,IAcMC,EAAW,IAAIC,sBAdE,SAACC,EAASF,GAC/BE,EAAQC,SAAQ,SAACC,GAEXA,EAAMC,gBAAkBD,EAAME,mBAAqB,GACrDF,EAAMG,OAAOT,UAAUC,IAAI,2BAOjB,CACdS,UAAW,KAKMhB,SAASiB,iBAAiB,cAClCN,SAAQ,SAACO,GAClBV,EAASW,QAAQD,MAKnBE,GACAC,OAAOC,iBAAiB,SAAUC,GAGpC,SAASA,IACHvB,SAASwB,KAAKC,UAAY,GAAKzB,SAAS0B,gBAAgBD,UAAY,EACtEzB,SAASC,cAAc,cAAcK,UAAUC,IAAI,aAEnDP,SAASC,cAAc,cAAcK,UAAUqB,OAAO,aAlD3CC,UArEC,SAACC,GACf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOD,EAAME,KAAKC,eAAeC,IAAIC,UACrCC,YAAaN,EAAME,KAAKC,eAAeC,IAAIG,iBAC3CC,MAAOR,EAAME,KAAKC,eAAeM,UAAUC,MAAMC,MAAMC,MAEzD,6BAASC,GAAG,eACV,kBAAC,IAAD,CACEC,IAAG,YAAcd,EAAME,KAAKC,eAAeF,MAC3CU,MAAOX,EAAME,KAAKC,eAAeM,UAAUC,MAAMC,MACjDI,OAAQ9C,EACR+C,UAAU,cAGZ,yBAAKA,UAAU,mBACb,4BACGhB,EAAME,KAAKC,eAAec,WAAWC,KAAI,SAAUC,GAClD,OACE,4BACE,2BAAIA,EAAJ,KACA,wCAKR,4BAAKnB,EAAME,KAAKC,eAAeF,OAE/B,uBAAGmB,KAAMpB,EAAME,KAAKC,eAAekB,WAAYL,UAAU,aAAzD,cAIA,6BACE,kBAAC,IAAD,CACEM,OAAQtB,EAAME,KAAKC,eAAeoB,SAClCC,YAAaA,IACbC,UAAU,WACVC,QAAQ,aACRV,UAAU,qBAId,yBAAKA,UAAU,wBACb,6CAEA,wBAAIA,UAAU,+CACXhB,EAAME,KAAKyB,kBAAkBC,MAAMV,KAAI,SAACW,GACvC,OACE,kBAAC,OAAD,CAAMC,GAAE,IAAMD,EAAKE,KAAKC,KAAKC,SAC3B,4BACE,kBAAC,IAAD,CACEtB,MAAOkB,EAAKE,KAAKtB,UAAUC,MAAMC,MACjCG,IAAKe,EAAKE,KAAK9B,iBAWjC,kBAAC,IAAD","file":"component---src-templates-project-js-1d128eb5e3844d870d5f.js","sourcesContent":["import React from \"react\"\n// import { Link } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport BlockContent from \"@sanity/block-content-to-react\"\nimport serializers from \"../components/serializers\"\nimport Footer from \"../components/footer\"\n\n// import { func } from \"prop-types\"\n\nexport const query = graphql`\n  query($Slug: String) {\n    sanityProjects(slug: { current: { eq: $Slug } }) {\n      seo {\n        _key\n        _type\n        focus_keyword\n        seo_title\n        meta_description\n      }\n      title\n      categories\n      _rawBody\n      websiteUrl\n      body {\n        sanityChildren {\n          text\n        }\n      }\n      mainImage {\n        asset {\n          fluid(maxWidth: 1400) {\n            ...GatsbySanityImageFluid_withWebp\n          }\n        }\n      }\n    }\n    allSanityProjects(\n      limit: 3\n      filter: { slug: { current: { ne: $Slug } } }\n      sort: { order: DESC, fields: publishedAt }\n    ) {\n      edges {\n        node {\n          title\n          publishedAt\n          slug {\n            current\n          }\n          mainImage {\n            asset {\n              fluid(maxWidth: 200) {\n                ...GatsbySanityImageFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst Project = (props) => {\n  return (\n    <Layout>\n      <SEO\n        title={props.data.sanityProjects.seo.seo_title}\n        description={props.data.sanityProjects.seo.meta_description}\n        image={props.data.sanityProjects.mainImage.asset.fluid.src}\n      />\n      <section id=\"projectPost\">\n        <Img\n          alt={`Project: ${props.data.sanityProjects.title}`}\n          fluid={props.data.sanityProjects.mainImage.asset.fluid}\n          onLoad={imageIsLoaded}\n          className=\"postImage\"\n        ></Img>\n\n        <div className=\"content_wrapper\">\n          <ol>\n            {props.data.sanityProjects.categories.map(function (category) {\n              return (\n                <li>\n                  <p>{category} </p>\n                  <span>+</span>\n                </li>\n              )\n            })}\n          </ol>\n          <h1>{props.data.sanityProjects.title}</h1>\n\n          <a href={props.data.sanityProjects.websiteUrl} className=\"visitSite\">\n            Visit site\n          </a>\n\n          <div>\n            <BlockContent\n              blocks={props.data.sanityProjects._rawBody}\n              serializers={serializers}\n              projectId=\"j7i4hfvy\"\n              dataset=\"production\"\n              className=\"allBlockContent\"\n            />\n          </div>\n\n          <div className=\"more_project_wrapper\">\n            <h2>More Projects</h2>\n\n            <ol className=\" more_project animation  animation--fade-up\">\n              {props.data.allSanityProjects.edges.map((edge) => {\n                return (\n                  <Link to={`/${edge.node.slug.current}`}>\n                    <li>\n                      <Img\n                        fluid={edge.node.mainImage.asset.fluid}\n                        alt={edge.node.title}\n                      />\n                    </li>\n                  </Link>\n                )\n              })}\n            </ol>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </Layout>\n  )\n}\n\nexport default Project\n\n// animations\n\nfunction initiateAnimations() {\n  const allBlockContent = document.querySelector(\".allBlockContent\")\n  const allChildrenElements = allBlockContent.children\n\n  for (let index = 1; index < allChildrenElements.length; index++) {\n    const element = allChildrenElements[index]\n    element.classList.add(\"animation\")\n    element.classList.add(\"animation--fade-up\")\n  }\n\n  // allChildrenElements.classList.add(\"animation\")\n  // allChildrenElements.classList.add(\"animation--fade-up\")\n\n  // callback function to do animations\n  const scrollImations = (entries, observer) => {\n    entries.forEach((entry) => {\n      // only do animation if the element is fully on screen\n      if (entry.isIntersecting && entry.intersectionRatio >= 0) {\n        entry.target.classList.add(\"animation--visible\")\n      } else {\n      }\n    })\n  }\n\n  // create the observer\n  const options = {\n    threshold: 0.2,\n  }\n  const observer = new IntersectionObserver(scrollImations, options)\n\n  // target the elements to be observed\n  const animations = document.querySelectorAll(\".animation\")\n  animations.forEach((animation) => {\n    observer.observe(animation)\n  })\n}\n\nfunction imageIsLoaded() {\n  initiateAnimations()\n  window.addEventListener(\"scroll\", scrollFunctionImage)\n}\n\nfunction scrollFunctionImage() {\n  if (document.body.scrollTop > 1 || document.documentElement.scrollTop > 1) {\n    document.querySelector(\".postImage\").classList.add(\"scaledIMG\")\n  } else {\n    document.querySelector(\".postImage\").classList.remove(\"scaledIMG\")\n  }\n}\n"],"sourceRoot":""}