{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["initiateAnimations","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","intersectionRatio","target","classList","add","threshold","document","querySelectorAll","animation","observe","IndexPage","data","title","sanityPages","seo","seo_title","description","meta_description","id","className","allSanityPost","edges","map","edge","to","node","slug","current","fluid","mainImage","asset","onLoad","alt","publishedAt"],"mappings":"gMA6EA,SAASA,IAKP,IAcMC,EAAW,IAAIC,sBAdE,SAACC,EAASF,GAC/BE,EAAQC,SAAQ,SAAAC,GAEVA,EAAMC,gBAAkBD,EAAME,mBAAqB,GACrDF,EAAMG,OAAOC,UAAUC,IAAI,2BAOjB,CACdC,UAAW,KAKMC,SAASC,iBAAiB,cAClCT,SAAQ,SAAAU,GACjBb,EAASc,QAAQD,MA1BNE,UAjEG,WAChB,IAAMC,EAAI,OAiCV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOD,EAAKE,YAAYC,IAAIC,UAC5BC,YAAaL,EAAKE,YAAYC,IAAIG,mBAEpC,6BAASC,GAAG,QACV,wBAAIC,UAAU,kCAAd,wBAEA,4BACGR,EAAKS,cAAcC,MAAMC,KAAI,SAAAC,GAC5B,OACE,kBAAC,OAAD,CAAMC,GAAE,SAAWD,EAAKE,KAAKC,KAAKC,SAChC,wBAAIR,UAAU,kCACZ,kBAAC,IAAD,CACES,MAAOL,EAAKE,KAAKI,UAAUC,MAAMF,MACjCG,OAAQrC,EACRsC,IAAKT,EAAKE,KAAKb,QAEjB,4BAAKW,EAAKE,KAAKb,OACf,6CAAmBW,EAAKE,KAAKQ,uB","file":"component---src-pages-blog-js-05bc74822e7b26e346ed.js","sourcesContent":["import React from \"react\"\n// import { Link } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n// import RewriteMarkdown from \"../components/RewriteMarkdown\"\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allSanityPost {\n        edges {\n          node {\n            title\n            publishedAt\n            slug {\n              current\n            }\n            mainImage {\n              asset {\n                fluid(maxWidth: 300) {\n                  ...GatsbySanityImageFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n      sanityPages(_id: { eq: \"590b8320-d955-4deb-a2e1-6b50169f192a\" }) {\n        seo {\n          _type\n          focus_keyword\n          seo_title\n          meta_description\n          _key\n        }\n        title\n      }\n    }\n  `)\n\n  return (\n    <Layout>\n      <SEO\n        title={data.sanityPages.seo.seo_title}\n        description={data.sanityPages.seo.meta_description}\n      />\n      <section id=\"blog\">\n        <h1 className=\"animation  animation--fade-up \">Updates and insights</h1>\n\n        <ol>\n          {data.allSanityPost.edges.map(edge => {\n            return (\n              <Link to={`/blog/${edge.node.slug.current}`}>\n                <li className=\"animation  animation--fade-up \">\n                  <Img\n                    fluid={edge.node.mainImage.asset.fluid}\n                    onLoad={initiateAnimations}\n                    alt={edge.node.title}\n                  />\n                  <h2>{edge.node.title}</h2>\n                  <h3>Published at: {edge.node.publishedAt}</h3>\n                </li>\n              </Link>\n            )\n          })}\n        </ol>\n      </section>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nfunction initiateAnimations() {\n  // allChildrenElements.classList.add(\"animation\")\n  // allChildrenElements.classList.add(\"animation--fade-up\")\n\n  // callback function to do animations\n  const scrollImations = (entries, observer) => {\n    entries.forEach(entry => {\n      // only do animation if the element is fully on screen\n      if (entry.isIntersecting && entry.intersectionRatio >= 0) {\n        entry.target.classList.add(\"animation--visible\")\n      } else {\n      }\n    })\n  }\n\n  // create the observer\n  const options = {\n    threshold: 0.2,\n  }\n  const observer = new IntersectionObserver(scrollImations, options)\n\n  // target the elements to be observed\n  const animations = document.querySelectorAll(\".animation\")\n  animations.forEach(animation => {\n    observer.observe(animation)\n  })\n}\n\nfunction imageIsLoaded() {\n  initiateAnimations()\n  window.addEventListener(\"scroll\", scrollFunctionImage)\n}\n\nfunction scrollFunctionImage() {\n  if (document.body.scrollTop > 1 || document.documentElement.scrollTop > 1) {\n    console.log(document.querySelector(\".postImage\"))\n\n    document.querySelector(\".postImage\").classList.add(\"scaledIMG\")\n  } else {\n    document.querySelector(\".postImage\").classList.remove(\"scaledIMG\")\n  }\n}\n"],"sourceRoot":""}