{"version":3,"sources":["webpack:///./src/components/footer.js","webpack:///./src/pages/blog.js"],"names":["Footer","data","sanityCompanyInfo","name","cvr","address","zipCode","city","country","href","phone","email","linkedin","facebook","instagram","allSanityPost","nodes","map","node","to","slug","current","className","initiateAnimations","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","intersectionRatio","target","classList","add","threshold","document","querySelectorAll","animation","observe","IndexPage","title","sanityPages","seo","seo_title","description","meta_description","id","edges","edge","fluid","mainImage","asset","onLoad","alt","publishedAt"],"mappings":"wJAgFeA,IA5EA,WACb,IAAMC,EAAI,OA4BV,OACE,gCACE,6BACE,4BAAKA,EAAKC,kBAAkBC,MAC5B,mCAASF,EAAKC,kBAAkBE,KAChC,2BAAIH,EAAKC,kBAAkBG,SAC3B,2BACGJ,EAAKC,kBAAkBI,QAD1B,KACqCL,EAAKC,kBAAkBK,MAE5D,2BAAIN,EAAKC,kBAAkBM,UAE7B,6BACE,0CACA,uBAAGC,KAAI,OAASR,EAAKC,kBAAkBQ,OAAvC,OACOT,EAAKC,kBAAkBQ,OAE9B,uBAAGD,KAAI,UAAYR,EAAKC,kBAAkBS,OACvCV,EAAKC,kBAAkBS,QAG5B,6BACE,yCACA,uBAAGF,KAAMR,EAAKC,kBAAkBU,UAAhC,YACA,uBAAGH,KAAMR,EAAKC,kBAAkBW,UAAhC,YACA,uBAAGJ,KAAMR,EAAKC,kBAAkBY,WAAhC,cAEF,6BACE,0CACA,2BACGb,EAAKc,cAAcC,MAAMC,KAAI,SAASC,GACrC,OAAO,kBAAC,OAAD,CAAMC,GAAE,QAAUD,EAAKE,KAAKC,SAA5B,mBAGX,kBAAC,OAAD,CAAMF,GAAG,IAAIG,UAAU,YAAvB,YAGA,kBAAC,OAAD,CAAMH,GAAG,OAAOG,UAAU,YAA1B,YAGA,kBAAC,OAAD,CAAMH,GAAG,QAAQG,UAAU,YAA3B,a,k81BCWR,SAASC,IAKP,IAcMC,EAAW,IAAIC,sBAdE,SAACC,EAASF,GAC/BE,EAAQC,SAAQ,SAAAC,GAEVA,EAAMC,gBAAkBD,EAAME,mBAAqB,GACrDF,EAAMG,OAAOC,UAAUC,IAAI,2BAOjB,CACdC,UAAW,KAKMC,SAASC,iBAAiB,cAClCT,SAAQ,SAAAU,GACjBb,EAASc,QAAQD,MA1BNE,UArEG,WAChB,IAAMtC,EAAI,OAiCV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEuC,MAAOvC,EAAKwC,YAAYC,IAAIC,UAC5BC,YAAa3C,EAAKwC,YAAYC,IAAIG,mBAEpC,6BAASC,GAAG,QACV,wBAAIxB,UAAU,kCAAd,wBAEA,4BACGrB,EAAKc,cAAcgC,MAAM9B,KAAI,SAAA+B,GAC5B,OACE,kBAAC,OAAD,CACE1B,UAAU,gCACVH,GAAE,SAAW6B,EAAK9B,KAAKE,KAAKC,SAE5B,4BACE,kBAAC,IAAD,CACE4B,MAAOD,EAAK9B,KAAKgC,UAAUC,MAAMF,MACjCG,OAAQ7B,EACR8B,IAAKL,EAAK9B,KAAKsB,QAEjB,4BAAKQ,EAAK9B,KAAKsB,OACf,6CAAmBQ,EAAK9B,KAAKoC,oBAOzC,kBAAC,IAAD","file":"component---src-pages-blog-js-91b3790439d50737c5ca.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nconst Footer = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      sanityCompanyInfo {\n        email\n        facebook\n        instagram\n        name\n        linkedin\n        country\n        copyrights\n        city\n        address\n        phone\n        slogan\n        zipCode\n        cvr\n      }\n\n      allSanityPost(sort: { fields: publishedAt, order: DESC }, limit: 1) {\n        nodes {\n          slug {\n            current\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <footer>\n      <div>\n        <h5>{data.sanityCompanyInfo.name}</h5>\n        <p>CVR: {data.sanityCompanyInfo.cvr}</p>\n        <p>{data.sanityCompanyInfo.address}</p>\n        <p>\n          {data.sanityCompanyInfo.zipCode}, {data.sanityCompanyInfo.city}\n        </p>\n        <p>{data.sanityCompanyInfo.country}</p>\n      </div>\n      <div>\n        <h5>Contact us</h5>\n        <a href={`tel:${data.sanityCompanyInfo.phone}`}>\n          +45 {data.sanityCompanyInfo.phone}\n        </a>\n        <a href={`mailto:${data.sanityCompanyInfo.email}`}>\n          {data.sanityCompanyInfo.email}\n        </a>\n      </div>\n      <div>\n        <h5>Follow us</h5>\n        <a href={data.sanityCompanyInfo.linkedin}>LinkedIn</a>\n        <a href={data.sanityCompanyInfo.facebook}>Facebook</a>\n        <a href={data.sanityCompanyInfo.instagram}>Instagram</a>\n      </div>\n      <div>\n        <h5>Short Cuts</h5>\n        <p>\n          {data.allSanityPost.nodes.map(function(node) {\n            return <Link to={`blog/${node.slug.current}`}>Recent post</Link>\n          })}\n        </p>\n        <Link to=\"/\" className=\"pageLink\">\n          Projects\n        </Link>\n        <Link to=\"blog\" className=\"pageLink\">\n          Insights\n        </Link>\n        <Link to=\"about\" className=\"pageLink\">\n          About\n        </Link>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\n// import { Link } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport Footer from \"../components/footer\"\n\n// import RewriteMarkdown from \"../components/RewriteMarkdown\"\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allSanityPost(sort: { order: DESC, fields: publishedAt }) {\n        edges {\n          node {\n            title\n            publishedAt\n            slug {\n              current\n            }\n            mainImage {\n              asset {\n                fluid(maxWidth: 300) {\n                  ...GatsbySanityImageFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n      sanityPages(_id: { eq: \"590b8320-d955-4deb-a2e1-6b50169f192a\" }) {\n        seo {\n          _type\n          focus_keyword\n          seo_title\n          meta_description\n          _key\n        }\n        title\n      }\n    }\n  `)\n\n  return (\n    <Layout>\n      <SEO\n        title={data.sanityPages.seo.seo_title}\n        description={data.sanityPages.seo.meta_description}\n      />\n      <section id=\"blog\">\n        <h1 className=\"animation  animation--fade-up \">Updates and insights</h1>\n\n        <ol>\n          {data.allSanityPost.edges.map(edge => {\n            return (\n              <Link\n                className=\"animation  animation--fade-up\"\n                to={`/blog/${edge.node.slug.current}`}\n              >\n                <li>\n                  <Img\n                    fluid={edge.node.mainImage.asset.fluid}\n                    onLoad={initiateAnimations}\n                    alt={edge.node.title}\n                  />\n                  <h2>{edge.node.title}</h2>\n                  <h3>Published at: {edge.node.publishedAt}</h3>\n                </li>\n              </Link>\n            )\n          })}\n        </ol>\n      </section>\n      <Footer />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nfunction initiateAnimations() {\n  // allChildrenElements.classList.add(\"animation\")\n  // allChildrenElements.classList.add(\"animation--fade-up\")\n\n  // callback function to do animations\n  const scrollImations = (entries, observer) => {\n    entries.forEach(entry => {\n      // only do animation if the element is fully on screen\n      if (entry.isIntersecting && entry.intersectionRatio >= 0) {\n        entry.target.classList.add(\"animation--visible\")\n      } else {\n      }\n    })\n  }\n\n  // create the observer\n  const options = {\n    threshold: 0.2,\n  }\n  const observer = new IntersectionObserver(scrollImations, options)\n\n  // target the elements to be observed\n  const animations = document.querySelectorAll(\".animation\")\n  animations.forEach(animation => {\n    observer.observe(animation)\n  })\n}\n"],"sourceRoot":""}